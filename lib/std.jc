# params function, list

let filter(fn, list) 
	| isEmpty(list) = []
	| fn(head(list)) = head(list) :: filter(fn, tail(list))
	| else = filter(fn, tail(list))

let map(fn, array)
	| isEmpty(array) = []
    | else = fn(head(array)) :: map(fn, tail(array))

# Returns the first element in the collection
let head(array) = array[0]

# Returns the collection with the exception of the first element
let tail(array) = array[1:]

let min(x, y) = x < y ? x : y

let max(x, y) = x > y ? x : y
